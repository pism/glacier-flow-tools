[project]
name = "glacier-flow-tools"
version = "0.1.1"
maintainers = [{name = "Andy Aschwanden", email = "andy.aschwanden@gmail.com"}]
description = """Tools for analysing glacier flow."""
readme = "README.md"
requires-python = ">3.8"
license = {text = "GPL 3.0"}
classifiers = [
        "License :: OSI Approved :: Apache Software License",
        "Natural Language :: English",
        "Operating System :: MacOS :: MacOS X",
        "Operating System :: Microsoft :: Windows",
        "Operating System :: POSIX :: Linux",
        "Programming Language :: Python :: 3.10",
        "Topic :: Scientific/Engineering :: Postprocessing",
        ]
dynamic = ["dependencies"]

[project.scripts]
compute_pathlines = "glacier_flow_tools:compute_pathlines"


[tool.setuptools.packages.find]
include = ["glacier_flow_tools"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["glacier_flow_tools"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = "True"
force_grid_wrap = 0
use_parentheses = "True"
line_length = 88

[tool.pycodestyle]
max-line-length = 119
exclude = [
    ".tox",
    ".git",
    "*/migrations/*",
    ".mypy_cache",
    ".pytest_cache",
    "*__init__.py",
    "venv"
    ]

[tool.mypy]
python_version = 3.11
plugins = "numpy.typing.mypy_plugin"
check_untyped_defs = "True"
ignore_missing_imports = "True"
warn_unused_ignores = "True"
warn_redundant_casts = "True"
warn_unused_configs = "True"

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
      \.eggs
    | \.git
    | \.mypy_cache
    | _build
    | conda
    | docs
 )/
'''

[tool.pylint.messages_control]
disable = """
    too-many-lines,
    no-else-return,
    bare-except,
    import-outside-toplevel
"""

[tool.pylint.format]
max-line-length = 120
